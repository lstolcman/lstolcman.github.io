<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pip on lstolcman Today-I-Learned</title><link>https://lstolcman.github.io/tags/pip/</link><description>Recent content in pip on lstolcman Today-I-Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 15 Feb 2022 12:11:00 +0200</lastBuildDate><atom:link href="https://lstolcman.github.io/tags/pip/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation speed of multiple python packages using pip</title><link>https://lstolcman.github.io/post/pip-multiple-packages/</link><pubDate>Tue, 15 Feb 2022 12:11:00 +0200</pubDate><guid>https://lstolcman.github.io/post/pip-multiple-packages/</guid><description>What&amp;rsquo;s faster - multiple pip install statements, or one with a list of wanted libraries? Lets do a quick check:
➜ test cat 1.sh pip install &amp;#34;pytest&amp;gt;=7.0,&amp;lt;7.1&amp;#34; pip install &amp;#34;pytest-mock&amp;gt;=3.7,&amp;lt;3.8&amp;#34; pip install &amp;#34;pytest-subtests&amp;gt;=0.6,&amp;lt;0.7&amp;#34; pip install &amp;#34;pytest-cov&amp;gt;=3.0,&amp;lt;3.1&amp;#34; ➜ test cat 2.sh pip install &amp;#34;pytest&amp;gt;=7.0,&amp;lt;7.1&amp;#34; &amp;#34;pytest-mock&amp;gt;=3.7,&amp;lt;3.8&amp;#34; &amp;#34;pytest-subtests&amp;gt;=0.6,&amp;lt;0.7&amp;#34; &amp;#34;pytest-cov&amp;gt;=3.0,&amp;lt;3.1&amp;#34; Results:
./1.sh 4.91s user 0.53s system 72% cpu 7.500 total ./1.sh 4.98s user 0.37s system 75% cpu 7.076 total ./1.sh 5.06s user 0.49s system 76% cpu 7.</description></item></channel></rss>